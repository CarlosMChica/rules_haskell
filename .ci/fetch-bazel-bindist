#!/usr/bin/env bash
set -euo pipefail
TOP="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." >/dev/null 2>&1 && pwd )"

case "$OSTYPE" in
  linux-gnu) OS=linux-x86_64; EXT=;;
  darwin) OS=darwin-x86_64; EXT=;;
  cygwin|msys|win32) OS=windows-x86_64; EXT=.exe;;
  **) echo "Unknown operating system" >&2; exit 1;;
esac
VERSION=$(cat "$TOP/.ci/bazelversion")
INSTALL="$(mktemp -d)"
(cd "$INSTALL" && curl -LO "https://github.com/bazelbuild/bazel/releases/download/$VERSION/bazel-$VERSION-$OS$EXT" >&2)
if [[ $OS = windows-x86_64 ]]; then
  # sha256sum -c does not behave as expected on Windows. It produces
  #
  #   sha256sum: /d/a/1/s/.ci/bazel-sha256: no file was verified
  #
  # even when the hashes match upon manual inspection.
  SHA256="$(cd "$INSTALL" && sha256sum --text bazel-$VERSION-$OS$EXT)"
  if ! grep -q "$SHA256" "$TOP/.ci/bazel-sha256" >&2; then
    echo "sha256 mismatch (compare .ci/bazel-sha256): $SHA256" >&2
    exit 1
  fi
else
  (cd "$INSTALL" && sha256sum --quiet --ignore-missing -c "$TOP/.ci/bazel-sha256") >&2
fi
mv "$INSTALL/bazel-$VERSION-$OS$EXT" "$INSTALL/bazel$EXT"
chmod +x "$INSTALL/bazel$EXT"
echo -n "$INSTALL"
